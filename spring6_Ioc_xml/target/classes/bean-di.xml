<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!--基于set方法进行注入-->
    <bean id="book" class="com.spring.di.Book">
<!--        <property name="bName" value="前端开发"></property>-->
        <property name="author" value="WenJelly"></property>
        <!--    如果想要为空值null，可以这样写-->
<!--        <property name="bName">-->
<!--            <null></null>-->
<!--        </property>-->
<!--        转义<>-->
        <property name="bName" value="&lt;&gt;"></property>
<!--        <property name="bName">-->
<!--            &lt;!&ndash; 解决方案二：使用CDATA节 &ndash;&gt;-->
<!--            &lt;!&ndash; CDATA中的C代表Character，是文本、字符的含义，CDATA就表示纯文本数据 &ndash;&gt;-->
<!--            &lt;!&ndash; XML解析器看到CDATA节就知道这里是纯文本，就不会当作XML标签或属性来解析 &ndash;&gt;-->
<!--            &lt;!&ndash; 所以CDATA节中写什么符号都随意 &ndash;&gt;-->
<!--            <value><![CDATA[a < b]]></value>-->
<!--        </property>-->
    </bean>

    <!--通过构造器完成注入-->
    <bean id="bookCon" class="com.spring.di.Book">
        <constructor-arg name="bName" value="Java"></constructor-arg>
        <constructor-arg name="author" value="wenguodong"></constructor-arg>

    </bean>
</beans>